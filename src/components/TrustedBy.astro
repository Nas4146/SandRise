---
export interface Props {
  logos: Array<{
    name: string;
    src: string;
    alt?: string;
    url?: string;
  }>;
  title?: string;
  subtitle?: string;
  className?: string;
}

const { logos, title = "Trusted by", subtitle, className = '' } = Astro.props;
---

<section class={`trusted-by ${className}`}>
  {(title || subtitle) && (
    <div class="trusted-header">
      {title && <h3 class="trusted-title">{title}</h3>}
      {subtitle && <p class="trusted-subtitle">{subtitle}</p>}
    </div>
  )}
  
  <div class="logos-grid">
    {logos.map((logo) => (
      logo.url ? (
        <a 
          href={logo.url}
          class="logo-item"
          target="_blank"
          rel="noopener"
          aria-label={`Visit ${logo.name}`}
        >
          <img 
            src={logo.src} 
            alt={logo.alt || `${logo.name} logo`}
            loading="lazy"
            decoding="async"
          />
        </a>
      ) : (
        <div class="logo-item">
          <img 
            src={logo.src} 
            alt={logo.alt || `${logo.name} logo`}
            loading="lazy"
            decoding="async"
          />
        </div>
      )
    ))}
  </div>
</section>

<style>
  .trusted-by {
    text-align: center;
  }

  .trusted-header {
    margin-bottom: var(--space-xl);
  }

  .trusted-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-medium);
    color: var(--color-text-secondary);
    margin: 0 0 var(--space-sm);
    text-transform: uppercase;
    letter-spacing: 0.08em;
    font-size: var(--font-size-sm);
  }

  .trusted-subtitle {
    font-size: var(--font-size-md);
    color: var(--color-text-tertiary);
    margin: 0;
  }

  .logos-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: var(--space-xl);
    align-items: center;
    max-width: 800px;
    margin: 0 auto;
  }

  .logo-item {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-md);
    transition: all var(--duration-sm) var(--ease-standard);
    border-radius: var(--radius-md);
    filter: grayscale(100%) opacity(0.6);
  }

  .logo-item:hover,
  .logo-item:focus-visible {
    filter: grayscale(0%) opacity(1);
    transform: translateY(-2px);
  }

  .logo-item img {
    max-width: 100%;
    max-height: 48px;
    width: auto;
    height: auto;
  }

  @media (max-width: 768px) {
    .logos-grid {
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
      gap: var(--space-lg);
    }

    .logo-item {
      padding: var(--space-sm);
    }

    .logo-item img {
      max-height: 36px;
    }
  }

  @media (max-width: 480px) {
    .logos-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-md);
    }
  }
</style>